#
#  Comaint Project
#  Copyright (C) 2023-2024 Dominique Parisot
# 
#  config.yml
# 
#  This program is free software: you can redistribute it and/or modify it under the terms of the 
#  GNU General Public License as published by the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
# 
#  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
#  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
# 
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/>.
# 

name: "comaint"

attributes:
  backend_project_name: "Comaint API backend"
  backend_project_dir: "comaint-backend"
  backend_project_version: "0.0.1"
  backend_project_description: "API server of Commaint project"

  mpa_frontend_project_name: "Comaint Multi Page Application frontend"
  mpa_frontend_project_dir: "comaint-mpa-frontend"
  mpa_frontend_project_version: "0.0.1"
  mpa_frontend_project_description: "Multi page application frontend of Comaint project"

  database_name: "db_comaint"
  database_schema_version: "1"
  api_version: "v1"
  frontend-project : "comaint-frontend"
  authors: "Dominique Parisot"
  copyright: "2023-2024"
  license: "GPL V3 or later"
  lang: "fr"

  auth_object: "user"
  auth_table_name: "users"
  auth_ident_property: "email"
  auth_password_property: "password"
  auth_extra_field: 'email'

objects:


  - name: "Company"
    attributes:
      table_name: "companies"
    properties:
      - name: "id"
        type: "id"
      - name: "name"
        type: "string"
      - name: "address"
        type: "text"
        default: ""
      - name: "equipmentUnitCount"
        type: "integer"
        default: 0
        attributes:
          auto_counter: true
      - name: "equipmentUnitSectionCount"
        type: "integer"
        default: 0
        attributes:
          auto_counter: true
      - name: "equipmentFamilyCount"
        type: "integer"
        default: 0
        attributes:
          auto_counter: true
      - name: "equipmentTypeCount"
        type: "integer"
        default: 0
        attributes:
          auto_counter: true
      - name: "equipmentCount"
        type: "integer"
        default: 0
        attributes:
          auto_counter: true
    indexes:
      - name: "name"
        unique: true
        keys:
          - property : "name"



  - name: "User"
    attributes:
      table_name: "users"
    properties:
      - name: "id"
        type: "id"
      - name: "email"
        type: "string"
        maximum: 320
      - name: "password"
        type: "string"
        secret: true
        minimum: 8
        maximum: 70 # 61 is the minimum size of bcrypt hash
      - name: "accountLocked"
        type: "boolean"
        default: false
      - name: "phone"
        type: "string"
        mandatory: false
      - name: "address"
        type: "text"
        mandatory: true
        default: ""
    links:
      - name: "company"
        target: "Company"
    indexes:
      - name: "email"
        unique: true
        keys:
          - property : "email"

  - name: "Token"
    attributes:
      table_name: "tokens"
    properties:
      - name: "id"
        type: "id"
      - name: "expires_at"
        type: "datetime"
    links:
      - name: "user"
        target: "User"
    indexes:
      - name: "id_user"
        unique: false
        keys:
          - link: "user"




  - name: "Unit"
    attributes:
      table_name: "units"
    properties:
      - name: "id"
        type: "id"
      - name: "name"
        type: "string"
      - name: "description"
        type: "string"
      - name: "equipmentUnitSectionCount"
        type: "integer"
        default: 0
        attributes:
          auto_counter: true
      - name: "equipmentCount"
        type: "integer"
        default: 0
        attributes:
          auto_counter: true
    links:
      - name: "company"
        target: "Company"
    indexes:
      - name: "id_company_name"
        unique: true
        keys:
          - link: "company"
          - property : "name"

            # A
  - name: "UnitSection"
    attributes:
      table_name: "unit_sections"
    properties:
      - name: "id"
        type: "id"
      - name: "name"
        type: "string"
      - name: "description"
        type: "string"
      - name: "equipmentCount"
        type: "integer"
        default: 0
        attributes:
          auto_counter: true
    links:
      - name: "unit"
        target: "Unit"
    indexes:
      - name: "id_unit_name"
        unique: true
        keys:
          - link : "unit"
          - property : "name"
 

  - name: "EquipmentFamily"
    attributes:
      table_name: "equipment_families"
    properties:
      - name: "id"
        type: "id"
      - name: "name"
        type: "string"
        minimum: 2
        maximum: 30
      - name: "description"
        type: "string"
        mandatory: false
      - name: "equipmentTypeCount"
        type: "integer"
        default: 0
        attributes:
          auto_counter: true
      - name: "equipmentCount"
        type: "integer"
        default: 0
        attributes:
          auto_counter: true
    links:
      - name: "company"
        target: "Company"
    indexes:
      - name: "id_company_name"
        keys:
          - link: "company"
          - property: "name"


  - name: "EquipmentType"
    attributes:
      table_name: "equipment_types"
    properties:
      - name: "id"
        type: "id"
      - name: "name"
        type: "string"
      - name: "description"
        type: "string"
        mandatory: false
      - name: "equipmentCount"
        type: "integer"
        default: 0
        attributes:
          auto_counter: true
    links:
      - name : "family"
        target: "EquipmentFamily"
        mandatory: true
    indexes:
      - name: "id_family_name"
        unique: true
        keys:
          - link : "family"
          - property: "name"
 

  - name: "Equipment"
    attributes:
      table_name: "equipments"
    properties:
      - name: "id"
        type: "id"
      - name: "name"
        type: "string"
      - name: "description"
        type: "string"
    links:
      - name: "type"
        target: "EquipmentType"
      - name: "section"
        target: "UnitSection"
    indexes:
      - name: "id_type_name"
        unique: true
        keys:
          - link : "type"
          - property: "name"
      - name: "section_name"
        unique: false
        keys:
          - link : "section"
          - property: "name"



files:
  - scope:  "project"
    input:  "config/init-db.sql"
    output: "output/init-db.sql"

    ########################### Backend 
    
  - scope:  "project"
    input:  "templates/api-backend/package.json.liquid"
    output: "output/{{project.attributes.backend_project_dir}}/package.json"

  - scope:  "project"
    input:  "templates/api-backend/config.json.sample.liquid"
    output: "output/{{project.attributes.backend_project_dir}}/config.json.sample"

  - scope:  "project"
    input:  "templates/api-backend/server.js.liquid"
    output: "output/{{project.attributes.backend_project_dir}}/src/server.js"

  - scope:  "project"
    input:  "templates/api-backend/model.js.liquid"
    output: "output/{{project.attributes.backend_project_dir}}/src/models/model.js"

  - scope:  "object"
    input:  "templates/api-backend/object-model.js.liquid"
    output: "output/{{project.attributes.backend_project_dir}}/src/models/{{object.name | kebabCase }}-model.js"

  - scope:  "project"
    input:  "templates/api-backend/auth-model.js.liquid"
    output: "output/{{project.attributes.backend_project_dir}}/src/models/auth-model.js"

  - scope:  "project"
    input:  "templates/api-backend/view.js.liquid"
    output: "output/{{project.attributes.backend_project_dir}}/src/views/view.js"

  - scope:  "project"
    input:  "templates/api-backend/controller.js.liquid"
    output: "output/{{project.attributes.backend_project_dir}}/src/routes/controller.js"

  - scope:  "object"
    input:  "templates/api-backend/object-routes.js.liquid"
    output: "output/{{project.attributes.backend_project_dir}}/src/routes/{{object.name | kebabCase}}-routes.js"

  - scope:  "project"
    input:  "templates/api-backend/auth-routes.js.liquid"
    output: "output/{{project.attributes.backend_project_dir}}/src/routes/auth-routes.js"


    ########################### Multi-page frontend

  - scope:  "project"
    input:  "templates/mpa-frontend/package.json.liquid"
    output: "output/{{project.attributes.mpa_frontend_project_dir}}/package.json"

  - scope:  "project"
    input:  "templates/mpa-frontend/config.json.sample.liquid"
    output: "output/{{project.attributes.mpa_frontend_project_dir}}/config.json.sample"

  - scope:  "project"
    input:  "templates/mpa-frontend/server.js.liquid"
    output: "output/{{project.attributes.mpa_frontend_project_dir}}/src/server.js"

  - scope:  "project"
    input:  "templates/mpa-frontend/model.js.liquid"
    output: "output/{{project.attributes.mpa_frontend_project_dir}}/src/api/model.js"

  - scope:  "object"
    input:  "templates/mpa-frontend/object-api.js.liquid"
    output: "output/{{project.attributes.mpa_frontend_project_dir}}/src/api/{{object.name | kebabCase}}-api.js"

  - scope:  "project"
    input:  "templates/mpa-frontend/view.js.liquid"
    output: "output/{{project.attributes.mpa_frontend_project_dir}}/src/views/view.js"

  - scope:  "project"
    input:  "templates/mpa-frontend/controller.js.liquid"
    output: "output/{{project.attributes.mpa_frontend_project_dir}}/src/routes/controller.js"

  - scope:  "object"
    input:  "templates/mpa-frontend/object-routes.js.liquid"
    output: "output/{{project.attributes.mpa_frontend_project_dir}}/src/routes/{{object.name | kebabCase}}-routes.js"

  - scope:  "object"
    input:  "templates/mpa-frontend/object-list.ejs.liquid"
    output: "output/{{project.attributes.mpa_frontend_project_dir}}/src/views/{{object.name | kebabCase}}-list.ejs"

  - scope:  "object"
    input:  "templates/mpa-frontend/object-details.ejs.liquid"
    output: "output/{{project.attributes.mpa_frontend_project_dir}}/src/views/{{object.name | kebabCase}}-details.ejs"

  - scope:  "project"
    input:  "templates/mpa-frontend/layout.ejs.liquid"
    output: "output/{{project.attributes.mpa_frontend_project_dir}}/src/views/layout.ejs"

  - scope:  "project"
    input:  "templates/mpa-frontend/home.ejs.liquid"
    output: "output/{{project.attributes.mpa_frontend_project_dir}}/src/views/home.ejs"

  - scope:  "project"
    input:  "templates/mpa-frontend/style.css"
    output: "output/{{project.attributes.mpa_frontend_project_dir}}/public/style.css"



