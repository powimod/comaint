{%- assign filename = object.name | kebabCase | append: "-routes.js" -%}
{% render "../../templates/license_header_js.liquid",
		project     : project.attributes.backend_project_name,
  		description : project.attributes.backend_project_description,
		authors     : project.attributes.authors,
		copyright   : project.attributes.copyright,
		filename    : filename 
		%}
'use script';
const assert = require('assert');
const {{object.name | camelCase}}Api = require('../api/{{object.name | kebabCase}}-api.js');

module.exports = (app) => {
        const ViewSingleton = require('../views/view.js');
        const view = ViewSingleton.getInstance();
        const ControllerSingleton = require('./controller.js');
        const controller = ControllerSingleton.getInstance();

	app.get('/{{object.name | kebabCase}}/list', async (request, response) => {
		const resultsPerPage = controller.config.parameters.resultsPerPage;
                assert(resultsPerPage !== undefined);

		const result = await {{object.name | camelCase}}Api.get{{object.name | pascalCase}}List({
			resultsPerPage : resultsPerPage,
			accessToken: request.session.accessToken
		});
		if (result.ok) {
			view.renderPage('{{object.name | kebabCase}}-list',  response, {
				{{object.name | camelCase}}List: result.{{object.name | camelCase}}List
			});
		}
		else {
			view.renderPage('error',  response, {
				message: result.error
			});
		}
	});

	app.get('/{{object.name | kebabCase}}/:{{object.name | snakeCase}}_id', async (request, response) => {
		const {{object.name | camelCase}}Id = request.params['{{object.name | snakeCase}}_id'];
		if ({{object.name | camelCase}}Id === undefined)
			throw new Error('URL parameter <{{object.name | camelCase}}_id> is missing');
		if (isNaN({{object.name | camelCase}}Id))
			throw new Error('URL parameter <{{object.name | camelCase}}_id> is not a number');
		const result = await {{object.name | camelCase}}Api.get{{object.name | pascalCase}}Details({{object.name | camelCase}}Id);
		if (result.ok) {
			view.renderPage('{{object.name | kebabCase}}-details',  response, {
				{{object.name | camelCase}}: result.{{object.name | camelCase}}
			});
		}
		else {
			view.renderPage('error',  response, {
				message: result.error
			});
		}
	});


}

