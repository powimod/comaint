{% render "../../templates/license_header_js.liquid",
		project     : project.attributes.spa_frontend_project_name,
  		description : project.attributes.spa_frontend_project_description,
		authors     : project.attributes.authors,
		copyright   : project.attributes.copyright,
		filename    : 'components/LogoutDialog.jsx'
		%}
import { useState, useContext } from 'react';
import { useTranslation } from 'react-i18next';
import { Link } from 'react-router-dom'

import authApi from '../api/auth-api.js'

import ConfirmDialog from './dialog/ConfirmDialog';

const LogoutDialog = ({isOpen, onResponse}) => {
	const { t } = useTranslation();

	const [ error, setError ] = useState(null); // FIXME used ?

	const onDialogResponse = async (confirmation) => {
		if (confirmation)  {
			try {
				console.log("Disconnect");
				throw new Error("not yet implemented");
			}
			catch (error) {
				setError(error.message !== undefined ? error.message : error);
				return;
			}
		}
		onResponse(confirmation);
	}

	return (<>
		<ConfirmDialog isOpen={isOpen} onResponse={onDialogResponse}>
			{error !== null && <div className='error-message'>{error}</div>}
			<div>{t('logout-question')}</div>
		</ConfirmDialog>
	</>)
}

export default LogoutDialog;
