{% render "../../templates/license_header_js.liquid",
		project     : project.attributes.spa_frontend_project_name,
  		description : project.attributes.spa_frontend_project_description,
		authors     : project.attributes.authors,
		copyright   : project.attributes.copyright,
		filename    : 'components/LoginDialog.jsx'
		%}
import { useState, useContext, useEffect } from 'react';
import { useTranslation } from 'react-i18next';
import { Link } from 'react-router-dom'

import authApi from '../api/auth-api.js'

import PaletteIcon from './PaletteIcon';
import Dialog from './dialog/Dialog';
import Config from '../components/Config';
import { AccountContext } from '../AccountContext'

const LoginDialog = ({isOpen, onClose, onCreateAccount}) => {
	const { t } = useTranslation();

	const { account, changeAccount } = useContext(AccountContext);
	const [ error, setError ] = useState(null);
	const [ email, setEmail] = useState('');
	const [ password, setPassword] = useState('');


	const onLoginButtonClick = async () => {
		if (email.length === 0) {
			setError(t('invalid-email-error'));
			return
		}
		if (password.length === 0) {
			setError(t('invalid-password-error'));
			return
		}
		try {
			// TODO login with API
			const result = await authApi.login(email, password);
			if (! result.ok) {
				setError(result.error);
				return;
			}
			onClose(); // close dialog
		} catch (error) {
			setError(error);
		}
	}

	const onForgetPasswordButtonClick = (ev) => {
		ev.preventDefault()
		console.log('Forget password')
	}

	const onEmailChanged = (ev) => {
		setEmail(ev.target.value.trim())
	}

	const onPasswordChanged = (ev) => {
		setPassword(ev.target.value.trim());
	}

	const onDialogClosed = () => {
		onClose();
	}

	return (<>
		<Dialog isOpen={isOpen} onClose={onDialogClosed} className='login-dialog'>
			
			<div>{t('login-message')}</div>
			<section>
				<div>{t('already-customer-question')}</div>
				{error !== null && <div className='error-message'>{error}</div>}
				<div className='input-container'>
					<label htmlFor='email'>{t('email-field')}</label>
					<input id='email' name='email' type='text' value={email} onChange={onEmailChanged}/>
				</div>
				<div className='input-container'>
					<label htmlFor='password'>{t('password-field')}</label>
					<input id='password' name='password' type='password' value={password} onChange={onPasswordChanged}/>
				</div>
				<div>
					<a href='' onClick={onForgetPasswordButtonClick}>{t('forget-password-button')}</a>
				</div>
				<div className='button-bar-right'>
					<button onClick={onLoginButtonClick}>{t('login-button')}</button>
				</div>
			</section>
			<section>
				<div>{t('new-customer-question')}</div>
				<div className='button-bar-right'>
					<button onClick={onCreateAccount}>{t('create-account-button')}</button>
				</div>
			</section>
			<div className='button-bar'>
				<button onClick={onClose}>{t('close')}</button>
			</div>

		</Dialog>
	</>)
}

export default LoginDialog;
