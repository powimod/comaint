import { useTranslation } from 'react-i18next';
import {useState} from 'react';
import {Link} from 'react-router-dom'
import Async, { useAsync } from "react-async"


const render = (data) => {
	return new Promise( (resolve, reject) => {
		const components = []
		let paragraph = []
		for (let line of data.split('\n')) {
			line = line.trim()
			if (line.length > 0 && paragraph.length > 0) {
				components.push(<p>{paragraph.join('\n')}</p>)
				paragraph = []
			}
			if (line.startsWith('###')) {
				components.push(<h3>{line.substr(3).trim()}</h3>)
				continue
			}
			if (line.startsWith('##')) {
				components.push(<h2>{line.substr(2).trim()}</h2>)
				continue
			}
			if (line.startsWith('#')) {
				components.push(<h1>{line.substr(1).trim()}</h1>)
				continue
			}
			paragraph.push(line)

		}
		resolve(<>{components}</>)
	});
}

const loadUrl = async ({ url }, {signal}) => {
	let response = await fetch(url, { signal })
	// FIXME invalid URL generates status=200 (and not 404 not found !)
	let data  = await response.text()
	return render(data);
}

const ContentLoader = ({source}) => {
	const { t } = useTranslation()
	return (
		<Async promiseFn={loadUrl} url={source}>
			{({ data, error, isPending }) => {
				if (isPending)
					return "Loading..."
				if (error)
					return "Something went wrong: " + error.message
				if (data) 
					return data
				return null
			}}
		</Async>
	)
}

export default ContentLoader
